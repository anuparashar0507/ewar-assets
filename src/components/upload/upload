import React, {useState} from "react";
import { firestore, storageRef } from "../../base";
import { Button, Form, FormGroup, Label, Input} from 'reactstrap';
import ImageCard from "../ImageCard";
// import axios from 'axios';
// import {Progress} from 'reactstrap';
// import { ToastContainer, toast} from 'react-toastify';
// import 'react-toastify/dist/ReactToastify.css';

// const db = app.firestore();
function guidGenerator() {
    const S4 = function () {
        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
    };
    return (S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4());

}
function Upload() {
  const [fileUrl, setFileUrl] = useState("");
  //const [images, setImages] = useState([]);
  const [fileName, setFileName] = useState("");
  const [catagory, setCatagory] = useState("");

  const onFileChange = async (e) => {
    const file = e.target.files[0];
    const uploadFile = storageRef.ref();
    const fileRef = uploadFile.child(file.name);
    await fileRef.put(file);
    setFileUrl(await fileRef.getDownloadURL());
    console.log("uploaded", fileRef.getDownloadURL());
    // loaded = (e.loaded / e.total*100);
     };
  
   
  const onSubmit = async (e) => {
    e.preventDefault();
    console.log(fileUrl);
    // setCatagory(e.target.catagory.value);
    // setFileName(e.target.name.value);

    if (!fileName || !fileUrl || !catagory) {
      return (console.log("err"));
    }
    const uniId = guidGenerator().toString();
    await firestore.collection("images").doc(uniId).set({
      name: fileName,
      catagory: catagory,
      imageFile: fileUrl,
    })
    console.log("uploaded to db");
  };

//   useEffect(() => {
//     const fetchImages = async () => {
//       const imagesCollection = await firestore.collection("images").get();
//       setImages(
//         imagesCollection.docs.map((doc) => {
//           return doc.data();
//         })
//       );
//     };
//     fetchImages();
//   }, []);

  return (
    <>
    <Form >
      <FormGroup>
        <Label for="catagory">Choose a catagory </Label>
        <Input type="text" name = "catagory" id="catagory" value={catagory} onChange={e => setCatagory(e.target.value)}/>
      </FormGroup> 
      <FormGroup>
        <Label for="fileName">File Name</Label>
        <Input type="text" name="name" id="name" value={fileName} onChange={e => setFileName(e.target.value)}/>
      </FormGroup>
      <FormGroup>
        <Label for="file">Upload Your File </Label>
        <Input type="file" name="file" id="file" onChange={onFileChange}/>
      </FormGroup>
      <Button onClick={onSubmit}>Submit</Button>
    </Form>
{/* <div className="container">
	      <div className="row">
      	  <div className="offset-md-3 col-md-6">
               <div className="form-group files">
                <label>Choose a catagory </label>
                <input type="text"  className="form-control" name = "catagory"/>
				<label>File Name</label>
				<input type="text" className="form-control" name="fileName"/>
				<label>Upload Your File </label>
				<input type="file" className="form-control" multiple onChange={onFileChange}/>
              </div>  
              <div className="form-group">
              <ToastContainer />
              <Progress max="100" color="success" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>
        
              </div> 
              
              <button type="button" className="btn btn-success btn-block" onClick={onSubmit}>Upload</button>

	      </div>
      </div>
      </div> */}
   
          {/* <ul>
        {images.map((image) => {
          return (
            <li key={image.uniId}>
              <img  width="100" height="100" src={image.imageFile} alt={image.name} />
              <p>{image.name}</p>
              <p>{image.catagory}</p>
            </li>
          );
        })}
      </ul>
    */}
<ImageCard src= {fileUrl} name= {fileName} catagory={catagory}/>
    </>
  );
}

export default Upload;